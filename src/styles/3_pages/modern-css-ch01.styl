// using stylus ftw

.ex-01-vertical-align
  .parent // suppose you had some box with a certain height
    height 300px
    padding 0 1rem
    margin 1rem
    border 1px solid tomato
  .child
    font-size 1.2rem
    // you could center its child element using positioning plus transform
    position relative
    top 50%
    transform translateY(-50%)
    // if the text looks blurry add a perspective transform
    // transform perspective(1px) translateY(-50%)
.ex-02-speech-bubbles-scale
  .box
    width 10rem
    background-color #e0e0e0
    padding 1rem
    margin 1rem
    border-radius 1rem
    position relative
    &::before
      // start with making a square (same width and height)
      content ''
      width 1rem
      height 1rem
      background-color #e0e0e0
      overflow hidden
      position absolute
      right -0.5rem //position just outside of edge at half the width of the square sticking out

      // vertically center
      top 50%
      margin-top -.5rem

      transform rotate(45deg) // rotating the square gives us the triangle
      // the rest intersects with the bubble

.ex-03-loader



  .loader

    // a circle with two colors for each half
    border-radius 50%
    width 50px
    height 50px
    background linear-gradient(to bottom, #cb60b3 0%, #cb60b3 0%, #c146a1 50%, #a80077 51%, #db36a4 100%)
    margin-top 50px // a little room for the jumping

    // defining the 'jump' animation moving up and down the y axis
    @keyframes jump
      from
        transform translateY(0px)
      to
        transform translateY(-50px)

    // use it
    animation: jump 1.5s ease-out infinite alternate

  .loader-02

    // a circle with two colors for each half
    border-radius 50%
    width 50px
    height 50px
    background linear-gradient(to bottom, #cb60b3 0%, #cb60b3 0%, #c146a1 50%, #a80077 51%, #db36a4 100%)
    margin-top 50px // a little room for the jumping

    // defining the 'jump-rotate-scale' animation moving up and down the y axis,
    // rotating, and expanding/contracting
    @keyframes jump-rotate-scale
      from
        transform translateY(0px) rotate(0deg) scale(1,1)
      to
        transform translateY(-50px) rotate(360deg) scale(0.8, 0.8)

    // use it
    animation: jump-rotate-scale 1.5s ease-out infinite alternate
  .loader-svg
    .spinner-dot
      stroke #000
      stroke-width 1
      fill #000
    .spinner-border
      fill transparent
      stroke-width 2
      width 100%
      height 100%
    .path
      stroke-dasharray 170
      stroke-dashoffset 20
    .spinner
      // rotate the circle, creates effect of the trace
      @keyframes rotate-spinner
        to
          transform rotate(360deg)
      margin 10px
      width 180px
      height 180px
      animation rotate-spinner 2s linear infinite

  .ex-05-flip-image
    .photo-container
      margin 10px auto
    .photo
      width 22vw
      height 20vw
      min-width 130px
      min-height 100px
      float left
      margin 0 20px
      position relative
      // the animation
      transform-style preserve-3d
      transition transform 1s ease-in-out
      &:hover
        transform rotateY(180deg)

      img
        object-fit cover

      .side
        width 100%
        height 100%
        position absolute
        // animation
        backface-visibility hidden
      .back
        transform rotateY(180deg)
        text-align center
        background-color #e0e0e0
